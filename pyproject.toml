[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "maxcli"
version = "1.0.0"
description = "Max's Personal CLI - A modular collection of useful development and operations commands"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Maximilian LS", email = "maximilianls98@gmail.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities"
]
requires-python = ">=3.8"
dependencies = [
    "questionary>=2.0.0",
    "argcomplete>=3.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "coverage>=7.0.0"
]

[project.scripts]
max = "maxcli.cli:main"

[project.urls]
Homepage = "https://github.com/MaximilianLS98/MaxCLI"
Repository = "https://github.com/MaximilianLS98/MaxCLI.git"
Issues = "https://github.com/MaximilianLS98/MaxCLI/issues"

[tool.setuptools]
packages = ["maxcli", "maxcli.commands", "maxcli.modules", "maxcli.utils"]

[tool.setuptools.package-data]
maxcli = ["py.typed"]

[tool.black]
line-length = 127
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "-q", 
    "--strict-markers",
    "--strict-config",
    "--tb=short",
    "--cov=maxcli",
    "--cov-branch",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=20",
    "-n",
    "auto"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "unit: marks tests as unit tests",
    "docker: marks tests that require Docker",
    "network: marks tests that require network access"
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::pytest.PytestDeprecationWarning",
    "ignore::DeprecationWarning"
]
norecursedirs = [
    ".git",
    ".tox", 
    "dist",
    "build",
    "*.egg",
    ".venv",
    "venv",
    "htmlcov"
]

[tool.coverage.run]
source = ["maxcli"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
] 